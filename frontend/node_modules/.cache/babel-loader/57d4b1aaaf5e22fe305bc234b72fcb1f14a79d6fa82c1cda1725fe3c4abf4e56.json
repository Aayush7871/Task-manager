{"ast":null,"code":"import axios from 'axios';\nimport { ADDTASK, DELETETASK, GETALLTASK, LOGIN, MARKREADTASK, REGISTER } from './apiConstants';\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\nexport const login = async data => {\n  try {\n    console.log('Attempting to login with URL:', LOGIN);\n    const response = await axios.post(LOGIN, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Login response:', response);\n    return response;\n  } catch (error) {\n    console.error('Login error details:', {\n      message: error.message,\n      response: error.response,\n      request: error.request\n    });\n    throw error;\n  }\n};\nexport const register = data => {\n  return axios.post(REGISTER, data);\n};\nexport const addtask = data => {\n  let token = getToken();\n  console.log(\"token\", token);\n  return axios.post(ADDTASK, data, {\n    headers: {\n      auth: token\n    }\n  });\n};\nexport const getTaskList = data => {\n  let token = getToken();\n  return axios.get(GETALLTASK, {\n    headers: {\n      auth: token\n    }\n  });\n};\nexport const deleteTask = data => {\n  let token = getToken();\n  return axios.post(DELETETASK, data, {\n    headers: {\n      auth: token\n    }\n  });\n};\nexport const markReadTask = data => {\n  let token = getToken();\n  return axios.post(MARKREADTASK, data, {\n    headers: {\n      auth: token\n    }\n  });\n};\nexport function getToken() {\n  let user = localStorage.getItem('user');\n  if (!user) return;\n  const userObj = JSON.parse(user);\n  return userObj.token;\n}","map":{"version":3,"names":["axios","ADDTASK","DELETETASK","GETALLTASK","LOGIN","MARKREADTASK","REGISTER","defaults","withCredentials","login","data","console","log","response","post","headers","error","message","request","register","addtask","token","getToken","auth","getTaskList","get","deleteTask","markReadTask","user","localStorage","getItem","userObj","JSON","parse"],"sources":["D:/TaskManager-master/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { ADDTASK, DELETETASK, GETALLTASK, LOGIN, MARKREADTASK, REGISTER } from './apiConstants';\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\n\nexport const login = async (data) => {\n    try {\n        console.log('Attempting to login with URL:', LOGIN);\n        const response = await axios.post(LOGIN, data, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        console.log('Login response:', response);\n        return response;\n    } catch (error) {\n        console.error('Login error details:', {\n            message: error.message,\n            response: error.response,\n            request: error.request\n        });\n        throw error;\n    }\n}\n\nexport const register = (data) => {\n    return axios.post(REGISTER, data);\n}\nexport const addtask = (data) => {\n    let token = getToken();\n    console.log(\"token\", token);\n    return axios.post(ADDTASK, data, {\n        headers: {\n            auth: token\n        }\n    });\n}\n\nexport const getTaskList = (data) => {\n    let token = getToken();\n    return axios.get(GETALLTASK, {\n        headers: {\n            auth: token\n        }\n    });\n}\nexport const deleteTask = (data) => {\n    let token = getToken();\n\n    return axios.post(DELETETASK, data, {\n        headers: {\n            auth: token\n        }\n    });\n}\n\nexport const markReadTask = (data) => {\n    let token = getToken();\n\n    return axios.post(MARKREADTASK, data, {\n        headers: {\n            auth: token\n        }\n    });\n}\n\n\nexport function getToken() {\n    let user = localStorage.getItem('user');\n    if (!user) return;\n    const userObj = JSON.parse(user);\n    return userObj.token;\n}\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,gBAAgB;;AAE/F;AACAN,KAAK,CAACO,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,KAAK,GAAG,MAAOC,IAAI,IAAK;EACjC,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAER,KAAK,CAAC;IACnD,MAAMS,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACV,KAAK,EAAEM,IAAI,EAAE;MAC3CK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAAC;IACxC,OAAOA,QAAQ;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAE;MAClCC,OAAO,EAAED,KAAK,CAACC,OAAO;MACtBJ,QAAQ,EAAEG,KAAK,CAACH,QAAQ;MACxBK,OAAO,EAAEF,KAAK,CAACE;IACnB,CAAC,CAAC;IACF,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAIT,IAAI,IAAK;EAC9B,OAAOV,KAAK,CAACc,IAAI,CAACR,QAAQ,EAAEI,IAAI,CAAC;AACrC,CAAC;AACD,OAAO,MAAMU,OAAO,GAAIV,IAAI,IAAK;EAC7B,IAAIW,KAAK,GAAGC,QAAQ,CAAC,CAAC;EACtBX,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,KAAK,CAAC;EAC3B,OAAOrB,KAAK,CAACc,IAAI,CAACb,OAAO,EAAES,IAAI,EAAE;IAC7BK,OAAO,EAAE;MACLQ,IAAI,EAAEF;IACV;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,WAAW,GAAId,IAAI,IAAK;EACjC,IAAIW,KAAK,GAAGC,QAAQ,CAAC,CAAC;EACtB,OAAOtB,KAAK,CAACyB,GAAG,CAACtB,UAAU,EAAE;IACzBY,OAAO,EAAE;MACLQ,IAAI,EAAEF;IACV;EACJ,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMK,UAAU,GAAIhB,IAAI,IAAK;EAChC,IAAIW,KAAK,GAAGC,QAAQ,CAAC,CAAC;EAEtB,OAAOtB,KAAK,CAACc,IAAI,CAACZ,UAAU,EAAEQ,IAAI,EAAE;IAChCK,OAAO,EAAE;MACLQ,IAAI,EAAEF;IACV;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,YAAY,GAAIjB,IAAI,IAAK;EAClC,IAAIW,KAAK,GAAGC,QAAQ,CAAC,CAAC;EAEtB,OAAOtB,KAAK,CAACc,IAAI,CAACT,YAAY,EAAEK,IAAI,EAAE;IAClCK,OAAO,EAAE;MACLQ,IAAI,EAAEF;IACV;EACJ,CAAC,CAAC;AACN,CAAC;AAGD,OAAO,SAASC,QAAQA,CAAA,EAAG;EACvB,IAAIM,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAI,CAACF,IAAI,EAAE;EACX,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;EAChC,OAAOG,OAAO,CAACV,KAAK;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}