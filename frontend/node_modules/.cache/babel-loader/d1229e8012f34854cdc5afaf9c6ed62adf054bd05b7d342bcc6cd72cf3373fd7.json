{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManager-master\\\\frontend\\\\src\\\\components\\\\Main\\\\Background.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Background.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle class\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.z = Math.random() * 1000;\n        this.size = Math.random() * 3 + 1;\n        this.speedX = (Math.random() - 0.5) * 0.3;\n        this.speedY = (Math.random() - 0.5) * 0.3;\n        this.speedZ = (Math.random() - 0.5) * 0.2;\n        const hue = Math.random() * 60 + 200; // Blue to purple range\n        this.color = `hsla(${hue}, 70%, 60%, 0.6)`;\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        this.z += this.speedZ;\n        if (this.x < 0 || this.x > canvas.width) this.speedX *= -1;\n        if (this.y < 0 || this.y > canvas.height) this.speedY *= -1;\n        if (this.z < 0 || this.z > 1000) this.speedZ *= -1;\n      }\n      draw() {\n        const scale = 1000 / (1000 + this.z);\n        const x = (this.x - canvas.width / 2) * scale + canvas.width / 2;\n        const y = (this.y - canvas.height / 2) * scale + canvas.height / 2;\n        const size = this.size * scale;\n        ctx.beginPath();\n        ctx.arc(x, y, size, 0, Math.PI * 2);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n      }\n    }\n\n    // Create more particles\n    const particles = Array.from({\n      length: 200\n    }, () => new Particle());\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      particles.forEach((p1, i) => {\n        particles.slice(i + 1).forEach(p2 => {\n          const dx = p1.x - p2.x;\n          const dy = p1.y - p2.y;\n          const dz = p1.z - p2.z;\n          const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n          if (distance < 200) {\n            const scale1 = 1000 / (1000 + p1.z);\n            const scale2 = 1000 / (1000 + p2.z);\n            const x1 = (p1.x - canvas.width / 2) * scale1 + canvas.width / 2;\n            const y1 = (p1.y - canvas.height / 2) * scale1 + canvas.height / 2;\n            const x2 = (p2.x - canvas.width / 2) * scale2 + canvas.width / 2;\n            const y2 = (p2.y - canvas.height / 2) * scale2 + canvas.height / 2;\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            const hue = Math.random() * 60 + 200; // Blue to purple range\n            ctx.strokeStyle = `hsla(${hue}, 70%, 60%, ${0.2 * (1 - distance / 200)})`;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        });\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"background-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(Background, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Background","_s","canvasRef","canvas","current","ctx","getContext","animationFrameId","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","Particle","constructor","x","Math","random","y","z","size","speedX","speedY","speedZ","hue","color","update","draw","scale","beginPath","arc","PI","fillStyle","fill","particles","Array","from","length","animate","clearRect","forEach","particle","p1","i","slice","p2","dx","dy","dz","distance","sqrt","scale1","scale2","x1","y1","x2","y2","moveTo","lineTo","strokeStyle","lineWidth","stroke","requestAnimationFrame","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TaskManager-master/frontend/src/components/Main/Background.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './Background.css';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let animationFrameId;\r\n\r\n        // Set canvas size\r\n        const resizeCanvas = () => {\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n        };\r\n        resizeCanvas();\r\n        window.addEventListener('resize', resizeCanvas);\r\n\r\n        // Particle class\r\n        class Particle {\r\n            constructor() {\r\n                this.x = Math.random() * canvas.width;\r\n                this.y = Math.random() * canvas.height;\r\n                this.z = Math.random() * 1000;\r\n                this.size = Math.random() * 3 + 1;\r\n                this.speedX = (Math.random() - 0.5) * 0.3;\r\n                this.speedY = (Math.random() - 0.5) * 0.3;\r\n                this.speedZ = (Math.random() - 0.5) * 0.2;\r\n                const hue = Math.random() * 60 + 200; // Blue to purple range\r\n                this.color = `hsla(${hue}, 70%, 60%, 0.6)`;\r\n            }\r\n\r\n            update() {\r\n                this.x += this.speedX;\r\n                this.y += this.speedY;\r\n                this.z += this.speedZ;\r\n\r\n                if (this.x < 0 || this.x > canvas.width) this.speedX *= -1;\r\n                if (this.y < 0 || this.y > canvas.height) this.speedY *= -1;\r\n                if (this.z < 0 || this.z > 1000) this.speedZ *= -1;\r\n            }\r\n\r\n            draw() {\r\n                const scale = 1000 / (1000 + this.z);\r\n                const x = (this.x - canvas.width / 2) * scale + canvas.width / 2;\r\n                const y = (this.y - canvas.height / 2) * scale + canvas.height / 2;\r\n                const size = this.size * scale;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(x, y, size, 0, Math.PI * 2);\r\n                ctx.fillStyle = this.color;\r\n                ctx.fill();\r\n            }\r\n        }\r\n\r\n        // Create more particles\r\n        const particles = Array.from({ length: 200 }, () => new Particle());\r\n\r\n        // Animation loop\r\n        const animate = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Update and draw particles\r\n            particles.forEach(particle => {\r\n                particle.update();\r\n                particle.draw();\r\n            });\r\n\r\n            // Draw connections\r\n            particles.forEach((p1, i) => {\r\n                particles.slice(i + 1).forEach(p2 => {\r\n                    const dx = p1.x - p2.x;\r\n                    const dy = p1.y - p2.y;\r\n                    const dz = p1.z - p2.z;\r\n                    const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n\r\n                    if (distance < 200) {\r\n                        const scale1 = 1000 / (1000 + p1.z);\r\n                        const scale2 = 1000 / (1000 + p2.z);\r\n                        const x1 = (p1.x - canvas.width / 2) * scale1 + canvas.width / 2;\r\n                        const y1 = (p1.y - canvas.height / 2) * scale1 + canvas.height / 2;\r\n                        const x2 = (p2.x - canvas.width / 2) * scale2 + canvas.width / 2;\r\n                        const y2 = (p2.y - canvas.height / 2) * scale2 + canvas.height / 2;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x1, y1);\r\n                        ctx.lineTo(x2, y2);\r\n                        const hue = Math.random() * 60 + 200; // Blue to purple range\r\n                        ctx.strokeStyle = `hsla(${hue}, 70%, 60%, ${0.2 * (1 - distance / 200)})`;\r\n                        ctx.lineWidth = 1;\r\n                        ctx.stroke();\r\n                    }\r\n                });\r\n            });\r\n\r\n            animationFrameId = requestAnimationFrame(animate);\r\n        };\r\n\r\n        animate();\r\n\r\n        // Cleanup\r\n        return () => {\r\n            window.removeEventListener('resize', resizeCanvas);\r\n            cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"background-container\">\r\n            <canvas ref={canvasRef} className=\"background-canvas\" />\r\n            <div className=\"background-overlay\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Background; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}